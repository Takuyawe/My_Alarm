アラームアプリ

残りのタスク
- タブで移動できる
- リファクタリング
- 時間になった時に、画面に時刻、ラベル、メッセージを表示

言語: 英語

データの流れ
1. アプリの初期化時に、shared_preferencesからアラームデータを取得
2. providerでアラームデータを定義
3. uiを動的に変更

タイマーをリセットする時
- ゴミ箱ボタン
- アラームをアップデートした時
- isActive変更時
- アラーム追加時

開発の流れ
1. アラームデータを追加し、shared_preferencesに格納
2. providerの設定 future?

機能：
- アラーム時刻の設定
- ラベルの設定
- 繰り返し機能
- アラーム全画面表示になる
- 全画面表示の時に、ラベルと何かメッセージを表示

追加機能:
- ダークモード
- スヌーズ
- レスポンシブデザイン https://pub.dev/packages/flutter_screenutil

ツール
- Riverpod
- Freezed: コードgenerator
- flutter_gen: asset管理
- shared_preferences: ストレージ

フォルダ構成
https://zenn.dev/web_tips/articles/530d02aaf90400

